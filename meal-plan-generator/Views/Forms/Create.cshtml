@model meal_plan_generator.Models.MealPlan.Form

@{
    ViewData["Title"] = "Create";
}
<h1>Create</h1>
<h4>Nutrient Settings</h4>
<hr />
@using (Html.BeginForm("Create", "Forms", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <h3 class="text-center">Nutrient Data</h3>

        @for (int i = 0; i < Model.Nutrients.Count; i++)
        {
            <h4>@Model.Nutrients[i].Name Range Settings</h4>
            @Html.HiddenFor(model => Model.Nutrients[i].Name)
            @Html.HiddenFor(model => Model.Nutrients[i].Unit)
            @Html.HiddenFor(model => Model.Nutrients[i].Quantity)
            <div class="container text-center">
                <div class="row row-cols-2 align-items-start input-group">
                    <div class="col mb-2">
                        <div class="form-floating mb-2">
                            @Html.EditorFor(model => Model.Nutrients[i].Settings.Weight,  new { htmlAttributes = new { @class = "form-control", min = "1", step = "1", type = "number", placeholder = $"Enter the importance", name = "Weight" } })
                            @Html.LabelFor(model => Model.Nutrients[i].Settings.Weight, new { htmlAttributes = new { @class = "form-label" } })
                        </div>
                    </div>
                    <div class="col mb-2">
                        <div class="form-floating mb-2">
                            @Html.EditorFor(model => Model.Nutrients[i].Settings.Intercept,  new { htmlAttributes = new { @class = "form-control", min = "1", step = "1", type = "number", placeholder = $"Enter the line slope", name = "Intercept" } })
                            @Html.LabelFor(model => Model.Nutrients[i].Settings.Intercept, new { htmlAttributes = new { @class = "form-label" } })
                        </div>
                    </div>
                </div>
                <div class="row row-cols-3 align-items-start input-group">
                    <div class="col mb-3">
                        <div class="form-floating mb-3">
                            @Html.EditorFor(model => Model.Nutrients[i].Settings.LowerBound, new { htmlAttributes = new { @class = "form-control", min = "0", step = "any", type = "number", placeholder = $"Enter the {Model.Nutrients[i].Unit}", name = "LowerBound" } })
                            @Html.LabelFor(model => Model.Nutrients[i].Settings.LowerBound, new { htmlAttributes = new { @class = "form-label" } })
                        </div>
                    </div>
                    <div class="col mb-3">
                        <div class="form-floating mb-3">
                            @Html.EditorFor(model => Model.Nutrients[i].Settings.IdealAmount, new { htmlAttributes = new { @class = "form-control", min = "0", step = "any", type = "number", placeholder = $"Enter the {Model.Nutrients[i].Unit}", name = "IdealAmount" } })
                            @Html.LabelFor(model => Model.Nutrients[i].Settings.IdealAmount, new { htmlAttributes = new { @class = "form-label" } })
                        </div>
                    </div>
                    <div class="col mb-3">
                        <div class="form-floating mb-3">
                            @Html.EditorFor(model => Model.Nutrients[i].Settings.UpperBound, new { htmlAttributes = new { @class = "form-control", min = "0", step = "any", type = "number", placeholder = $"Enter the {Model.Nutrients[i].Unit}", name = "UpperBound" } })
                            @Html.LabelFor(model => Model.Nutrients[i].Settings.UpperBound, new { htmlAttributes = new { @class = "form-label" } })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
