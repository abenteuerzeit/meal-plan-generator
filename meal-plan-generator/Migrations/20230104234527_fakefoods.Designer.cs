// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using meal_plan_generator.Context;

#nullable disable

namespace meal_plan_generator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230104234527_fakefoods")]
    partial class fakefoods
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CaloriesPerServing")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ServingSize")
                        .HasColumnType("float");

                    b.Property<double>("Servings")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Nutrient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentNutrientQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<decimal>("IdealAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrioritySettingsId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("PrioritySettingsId");

                    b.ToTable("Nutrient");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.NutrientData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<float>("IdealAmount")
                        .HasColumnType("real");

                    b.Property<float>("LowerBound")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UpperBound")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("NutrientData");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.NutrientSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("NutrientSettings");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Nutrient", b =>
                {
                    b.HasOne("meal_plan_generator.Models.MealPlan.Food", null)
                        .WithMany("Nutrients")
                        .HasForeignKey("FoodId");

                    b.HasOne("meal_plan_generator.Models.MealPlan.NutrientSettings", "PrioritySettings")
                        .WithMany()
                        .HasForeignKey("PrioritySettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrioritySettings");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.NutrientData", b =>
                {
                    b.HasOne("meal_plan_generator.Models.MealPlan.Form", null)
                        .WithMany("NutrientData")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Food", b =>
                {
                    b.Navigation("Nutrients");
                });

            modelBuilder.Entity("meal_plan_generator.Models.MealPlan.Form", b =>
                {
                    b.Navigation("NutrientData");
                });
#pragma warning restore 612, 618
        }
    }
}
